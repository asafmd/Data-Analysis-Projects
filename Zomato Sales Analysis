-- Creating Tables
drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);

-- Selecting Tables
select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;

-- Data Analysis in the Data Set

-- Gold Users to Users ratio
select round(cast (count(g.userid) as decimal)/count(u.userid),2) as 'Gold Users to Users Ratio' from 
users u left join goldusers_signup g on u.userid = g.userid

--User who signed up for gold first
select * from goldusers_signup where 
gold_signup_date = (select min(gold_signup_date) from goldusers_signup )

-- Average price of the products
select AVG(price) as Average_Product_Price  from product;

-- Month wise sales

select month(created_date) as Month_Number, sum(p.price) as 'Sales' from sales s
join product p on s.product_id = p.product_id
group by month(created_date)

-- User who spent the most 
select top 1 s.userid, sum(p.price) as Total_Amount_Spent from sales s 
join product p on s.product_id = p.product_id
group by s.userid ORDER BY sum(p.price) desc

-- Most Sold Product

select TOP 1 p.product_id,count(s.created_date) as Sales from sales s
join product p on s.product_id = p.product_id
group by p.product_id ORDER BY count(s.created_date) desc

-- Least Sold Product

select TOP 1 p.product_id,count(s.created_date) as Sales from sales s
join product p on s.product_id = p.product_id
group by p.product_id ORDER BY count(s.created_date)

-- Year wise sales

select year(created_date) as Month_Number, sum(p.price) as 'Sales' from sales s
join product p on s.product_id = p.product_id
group by year(created_date)

-- Days in between first and last order
with f as (
select min(created_date) as First_Order from sales
),
l as (
select max(created_date) as Last_Order from sales
)

select datediff(day,f.First_Order,l.Last_Order) as 'Days in between First & Last Orders'
from f,l

-- Third Order Date
with cte as(
select created_date, row_number() over(order by created_date) as rn from sales
)
select created_date from cte where rn =3

-- Second order of every customer
with cte as(
select userid,created_date, row_number() over(partition by userid order by created_date) as rn from sales
)
select * from cte where cte.rn = 2













